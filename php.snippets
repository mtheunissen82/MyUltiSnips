snippet	<? "PHP Open Tag"
<?php

endsnippet

snippet func "PHP Function"
function ${1:functionName}($2)
{
$0
}
endsnippet

snippet	fore "PHP Foreach"
foreach ($1 as $2)} {
	$0
}
endsnippet

snippet	forek "PHP Foreach ($key => $value)"
foreach (\$${1:collection} as \$${2:key} => ${3:$value}) {
$0
}
endsnippet

snippet	class "PHP Class"
<?php

namespace $1;

/**
 * @package $1
 */
class ${2:ClassName}
{
$0
}
endsnippet

snippet	aclass "PHP Abstract Class"
<?php

namespace $1;

/**
 * @package $1
 */
abstract class ${2:AbstractClassName}
{
$0
}
endsnippet

snippet	iface "PHP Interface"
<?php

namespace $1;

/**
 * @package $1
 */
interface ${2:InterfaceName}
{
$0
}
endsnippet

snippet	pubf "PHP Public Method"
/**
 *
 */
public function ${1:publicMethodName}($2)
{
	${3:throw new \Exception('Method is	not implemented yet');}
}
endsnippet

snippet	pubsf "PHP Public Static Method"
/**
 *
 */
public static function ${1:publicStaticMethod}($2)
{
	${3:throw new \Exception('Method is	not implemented yet');}
}
endsnippet

snippet	prof "PHP Protected Method"
/**
 *
 */
protected function ${1:protectedMethodName}($2)
{
	${3:throw new \Exception('Method is	not implemented yet');}
}
endsnippet

snippet	prosf "PHP Protected Static Method"
/**
 *
 */
protected static function ${1:protectedStaticMethodName}($2)
{
	${3:throw new \Exception('Method is	not implemented yet');}
}
endsnippet

snippet	privf "PHP Private Method"
/**
 *
 */
private function ${1:privateMethodName}($2)
{
	${3:throw new \Exception('Method is not implemented yet');}
}
endsnippet
